global:
  blockchain: ethereum
  network: mainnet
protocol-erc20-api:
  image:
    repository: ethereum-indexer-erc20-api
  replicas: 2
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/erc20'
    PROFILES: '{{ .Values.global.blockchain }},consul,{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }}'
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 512
      max_direct_memory_megabytes: 128
  updateConfig:
    order: start-first
  networks:
    common:
      '{{ include "service.appEnv" $ }}-backend':
        aliases: [ '{{ include "service.appEnv" $ }}-protocol-{{ .Values.global.blockchain }}-erc20-api' ]

protocol-erc20-listener:
  image:
    repository: ethereum-indexer-erc20-listener
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/erc20'
    PROFILES: '{{ .Values.global.blockchain }},consul,{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }}'
  nodeSelector:
    node.labels.rarible.job: true
  resources:
    jvm:
      xmx_megabytes: 512
      max_direct_memory_megabytes: 256
  networks:
    common:
    - '{{ include "service.appEnv" $ }}-backend'
    - '{{ .Values.global.network }}-ethereum'

protocol-gateway:
  image:
    repository: ethereum-indexer-gateway
  replicas: 2
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol'
    PROFILES: '{{ .Values.global.blockchain }},consul,{{ include "service.appEnv" $ }}'
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 512
      max_direct_memory_megabytes: 128
  updateConfig:
    order: start-first
  networks:
    common:
    - '{{ include "service.appEnv" $ }}-backend'
    - 'proxy'

protocol-order-api:
  image:
    repository: ethereum-indexer-order-api
  replicas: 2
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/order'
    PROFILES: '{{ .Values.global.blockchain }},consul,{{ include "service.appEnv" $ }}'
    JAVA_OPTIONS: '-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp'
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 512
      max_direct_memory_megabytes: 128
  updateConfig:
    order: start-first
  networks:
    common:
      '{{ include "service.appEnv" $ }}-backend':
        aliases: [ '{{ include "service.appEnv" $ }}-protocol-{{ .Values.global.blockchain }}-order-api' ]
      '{{ include "service.appEnv" $ }}-ethereum':
        aliases: [ '{{ include "service.appEnv" $ }}-protocol-{{ .Values.global.blockchain }}-order-api' ]

protocol-order-listener:
  image:
    repository: ethereum-indexer-order-listener
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/order'
    PROFILES: '{{ .Values.global.blockchain }},consul,{{ include "service.appEnv" $ }}'
  nodeSelector:
    node.labels.rarible.job: true
  resources:
    jvm:
      xmx_megabytes: 768
      max_direct_memory_megabytes: 128
  networks:
    common:
    - '{{ include "service.appEnv" $ }}-backend'
    - '{{ .Values.global.network }}-ethereum'

protocol-order-migration:
  image:
    repository: ethereum-indexer-order-migration
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/order'
    PROFILES: '{{ .Values.global.blockchain }},consul,{{ include "service.appEnv" $ }}'
  nodeSelector:
    node.labels.rarible.job: true
  resources:
    jvm:
      xmx_megabytes: 512
      max_direct_memory_megabytes: 128
  networks:
    common:
    - '{{ include "service.appEnv" $ }}-backend'
    - '{{ .Values.global.network }}-ethereum'

protocol-unlockable-api:
  image:
    repository: ethereum-indexer-unlockable-api
  replicas: 2
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/unlockable'
    PROFILES: '{{ .Values.global.blockchain }},consul,{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }}'
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 512
      max_direct_memory_megabytes: 128
  updateConfig:
    order: start-first
  networks:
    '{{ include "service.appEnv" $ }}-backend':
        aliases: [ '{{ include "service.appEnv" $ }}-protocol-{{ .Values.global.blockchain }}-unlockable-api' ]

protocol-nft-api:
  image:
    repository: ethereum-indexer-nft-api
  replicas: 2
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/nft'
    PROFILES: '{{ .Values.global.blockchain }},consul,{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }}'
  nodeSelector:
    node.labels.rarible.service: true
  resources:
    jvm:
      xmx_megabytes: 512
      max_direct_memory_megabytes: 128
  updateConfig:
    order: start-first
  networks:
    common:
      '{{ include "service.appEnv" $ }}-backend':
        aliases: [ '{{ include "service.appEnv" $ }}-protocol-{{ .Values.global.blockchain }}-nft-api' ]
      '{{ include "service.appEnv" $ }}-ethereum':
        aliases: [ '{{ include "service.appEnv" $ }}-protocol-{{ .Values.global.blockchain }}-nft-api' ]

protocol-nft-listener:
  image:
    repository: ethereum-indexer-nft-listener
  environments:
    APPLICATION_ENVIRONMENT: '{{ include "service.appEnv" $ }}'
    CONSUL_ROOT_PATH: '{{ include "service.appEnv" $ }}/protocol/{{ .Values.global.blockchain }}/nft'
    PROFILES: '{{ .Values.global.blockchain }},consul,{{ include "service.appEnv" $ }},{{ .Values.global.blockchain }}-{{ include "service.appEnv" $ }}'
  nodeSelector:
    node.labels.rarible.job: true
  resources:
    jvm:
      xmx_megabytes: 768
      max_direct_memory_megabytes: 128
  networks:
    common:
    - '{{ include "service.appEnv" $ }}-backend'
    - '{{ .Values.global.network }}-ethereum'